elteres_egyutt = sum(egyeni_egyutt) - sum(orsz_egyutt),
elteres_mkkp = sum(egyeni_mkkp) - sum(orsz_mkkp),
elteres_egyeb = sum(egyeni_egyeb) - sum(orsz_egyeb),
elteres_nemzetisegi_osszes = sum(nemzetisegi_osszes) * -1,
elteres_nemzetisegi_nemet = sum(nemzetisegi_nemet) * -1,
listas_hianyzo = sum((orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb + nemzetisegi_osszes + nemzetisegi_nemet)) - sum((kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
balodal_jobbik_kihivo = sum(orsz_mszp) + sum(orsz_dk) - sum(orsz_jobbik)),
by = oevk_id][order(oevk_id)]
write.csv(egyeni_lista_by_oevk_2018,'2018_by_oevk.csv', fileEncoding = "UTF-8")
### TELEPULES szint≈± adatok
egyeni_lista_by_telep_2018 <- by_szavazokor_2018[, list(
megyeid = megyeid,
megye = megye,
telepid = telepid,
telep = telep,
szavazok = sum(nevjegyz + nevjegyz_atjel),
ossz_szavazo = sum(megjel + megjel_atjel),
tobblet_hiany = sum(tobblet_hiany),
ervenytelen = sum(ervenytelen),
ervenyes = sum(ervenyes),
ervenytelen_szazalek = sum(ervenytelen) / (sum(ervenytelen) + sum(ervenyes)),
egyeni_fidesz = sum(egyeni_fidesz),
egyeni_lmp = sum(egyeni_lmp),
egyeni_mszp = sum(egyeni_mszp),
egyeni_dk = sum(egyeni_dk),
egyeni_mszp_dk = sum(egyeni_mszp) + sum(egyeni_dk),
egyeni_jobbik = sum(egyeni_jobbik),
egyeni_momentum = sum(egyeni_momentum),
egyeni_egyutt = sum(egyeni_egyutt),
egyeni_mkkp = sum(egyeni_mkkp),
egyeni_mellar = sum(mellar_tamas),
egyeni_kesz = sum(kesz_zoltan),
egyeni_egyeb = sum(egyeni_egyeb),
egyeni_fidesz_pc = sum(egyeni_fidesz) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_lmp_pc = sum(egyeni_lmp) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_mszp_pc = sum(egyeni_mszp) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_dk_pc = sum(egyeni_dk) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_jobbik_pc = sum(egyeni_jobbik) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_momentum_pc = sum(egyeni_momentum) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_egyutt_pc = sum(egyeni_egyutt) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_mkkp_pc = sum(egyeni_mkkp) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_mellar_pc = sum(mellar_tamas) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_kesz_pc = sum(kesz_zoltan) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
egyeni_egyeb_pc = sum(egyeni_egyeb) / (sum(kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
orsz_fidesz = sum(orsz_fidesz),
orsz_lmp = sum(orsz_lmp),
orsz_mszp = sum(orsz_mszp),
orsz_dk = sum(orsz_dk),
orsz_mszp_dk = sum(orsz_mszp) + sum(orsz_dk),
orsz_jobbik = sum(orsz_jobbik),
orsz_momentum = sum(orsz_momentum),
orsz_egyutt = sum(orsz_egyutt),
orsz_mkkp = sum(orsz_mkkp),
orsz_egyeb = sum(orsz_egyeb),
nemzetisegi_osszes = sum(nemzetisegi_osszes),
nemzetisegi_nemet = sum(nemzetisegi_nemet),
orsz_fidesz_pc = sum(orsz_fidesz) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_lmp_pc = sum(orsz_lmp) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_mszp_pc = sum(orsz_mszp) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_dk_pc = sum(orsz_dk) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_jobbik_pc = sum(orsz_jobbik) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_momentum_pc = sum(orsz_momentum) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_egyutt_pc = sum(orsz_egyutt) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_mkkp_pc = sum(orsz_mkkp) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
orsz_egyeb_pc = sum(orsz_egyeb) / (sum(orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb)),
elteres_fidesz = sum(egyeni_fidesz) - (sum(orsz_fidesz)),
elteres_lmp = sum(egyeni_lmp) - sum(orsz_lmp),
elteres_mszp = sum(egyeni_mszp) - sum(orsz_mszp),
elteres_mszp_dk = (sum(egyeni_mszp) + sum(egyeni_dk)) - (sum(orsz_mszp) + sum(orsz_dk)),
elteres_dk = sum(egyeni_dk) - sum(orsz_dk),
elteres_jobbik = sum(egyeni_jobbik) - sum(orsz_jobbik),
elteres_momentum = sum(egyeni_momentum) - sum(orsz_momentum),
elteres_egyutt = sum(egyeni_egyutt) - sum(orsz_egyutt),
elteres_mkkp = sum(egyeni_mkkp) - sum(orsz_mkkp),
elteres_egyeb = sum(egyeni_egyeb) - sum(orsz_egyeb),
elteres_nemzetisegi_osszes = sum(nemzetisegi_osszes) * -1,
elteres_nemzetisegi_nemet = sum(nemzetisegi_nemet) * -1,
listas_hianyzo = sum((orsz_fidesz + orsz_jobbik + orsz_mszp + orsz_dk + orsz_lmp + orsz_momentum + orsz_egyutt + orsz_mkkp + orsz_egyeb + nemzetisegi_osszes + nemzetisegi_nemet)) - sum((kesz_zoltan + mellar_tamas + egyeni_fidesz + egyeni_jobbik + egyeni_mszp + egyeni_dk + egyeni_lmp + egyeni_momentum + egyeni_egyutt + egyeni_mkkp + egyeni_egyeb)),
balodal_jobbik_kihivo = sum(orsz_mszp) + sum(orsz_dk) - sum(orsz_jobbik)),
by = telep][order(orsz_fidesz_pc)]
egyeni_lista_by_telep_2018 <-unique(egyeni_lista_by_telep_2018)
write.csv(egyeni_lista_by_telep_2018,'2018_by_telep.csv', fileEncoding = "UTF-8")
### OEVK profilok
data_OEVK_profil <- read.csv("2018_by_oevk_OEVK_profiles.csv")
freq(data_OEVK_profil$OEVK_profil)
## ANALYSIS - Fidesz and other party votes
fidesz_vote_by_OEVK_profile <- lm(orsz_fidesz_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(fidesz_vote_by_OEVK_profile)
mszp_vote_by_OEVK_profile <- lm(orsz_mszp_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(mszp_vote_by_OEVK_profile)
dk_vote_by_OEVK_profile <- lm(orsz_dk_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(dk_vote_by_OEVK_profile)
jobbik_vote_by_OEVK_profile <- lm(orsz_jobbik_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(jobbik_vote_by_OEVK_profile)
lmp_vote_by_OEVK_profile <- lm(orsz_lmp_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(lmp_vote_by_OEVK_profile)
momentum_vote_by_OEVK_profile <- lm(orsz_momentum_pc ~ OEVK_profil, data_OEVK_profil)
coeftest(momentum_vote_by_OEVK_profile)
ggplot(data_OEVK_profil, aes(OEVK_profil, orsz_fidesz_pc)) + geom_point(color ="red") +
geom_smooth(method = "loess") + ggtitle("Fidesz vote share % by OEVK profile") + xlab("OEVK profile") + ylab("Fidesz vote share") +
theme_minimal()
ggsave(("fidesz_vote_oevk_profile.png"), width = 30, height = 18, units = c("cm"))
ggplot(data_OEVK_profil, aes(szavazok, orsz_fidesz_pc)) + geom_point(color ="red") +
geom_smooth(method = "lm") + ggtitle("Fidesz vote share % by OEVK size (number of voters)") + xlab("Number of voters") + ylab("Fidesz vote share") +
theme_minimal()
ggsave(("fidesz_vote_oevk_size.png"), width = 30, height = 18, units = c("cm"))
ggplot(data_OEVK_profil, aes(OEVK_profil, orsz_jobbik_pc)) + geom_point(color ="red") +
geom_smooth(method = "loess") + ggtitle("Jobbik vote share % by OEVK profile") + xlab("OEVK profile") + ylab("Jobbik vote share") +
theme_minimal()
ggsave(("jobbik_vote_oevk_profile.png"), width = 30, height = 18, units = c("cm"))
ggplot(data_OEVK_profil, aes(OEVK_profil, orsz_mszp_pc)) + geom_point(color ="red") +
geom_smooth(method = "loess") + ggtitle("MSZP vote share % by OEVK profile") + xlab("OEVK profile") + ylab("MSZP vote share") +
theme_minimal()
ggsave(("mszp_vote_oevk_profile.png"), width = 30, height = 18, units = c("cm"))
ggplot(data_OEVK_profil, aes(OEVK_profil, orsz_lmp_pc)) + geom_point(color ="red") +
geom_smooth(method = "loess") + ggtitle("LMP vote share % by OEVK profile") + xlab("OEVK profile") + ylab("LMP vote share") +
theme_minimal()
ggsave(("lmp_vote_oevk_profile.png"), width = 30, height = 18, units = c("cm"))
egyeni_lista_by_telep_2018$telep_tipus <- cut(egyeni_lista_by_telep_2018$szavazok, c(0, 500, 1000, 2000, 5000, 10000, 30000, 60000, 100000, Inf),
labels = c("0", "1", "2", "3", "4", "5", "6", "7", "8"))
freq(egyeni_lista_by_telep_2018$telep_tipus)
szavazok_by_telep_tipus <- egyeni_lista_by_telep_2018[, list(ossz_szavazo = sum(ossz_szavazo),
ossz_telepules = sum(ossz_szavazo / ossz_szavazo)),
by = telep_tipus][order(telep_tipus)]
egyeni_lista_by_telep_2018$telep_tipus <- as.integer(egyeni_lista_by_telep_2018$telep_tipus)
ggplot(szavazok_by_telep_tipus, aes(x = ossz_szavazo)) + geom_histogram(binwidth = 100000)
ggplot(egyeni_lista_by_telep_2018, aes(telep_tipus, orsz_fidesz_pc)) + geom_point(color ="red") +
geom_smooth(method = "lm") + ggtitle("Fidesz vote share % by town size") + xlab("Town size category") + ylab("Fidesz vote share") +
theme_minimal()
ggsave(("fidesz_vote_town_size.png"), width = 30, height = 18, units = c("cm"))
ggplot(egyeni_lista_by_telep_2018, aes(telep_tipus, orsz_mszp_pc)) + geom_point(color ="red") +
geom_smooth(method = "lm") + ggtitle("MSZP vote share % by town size") + xlab("Town size category") + ylab("MSZP vote share") +
theme_minimal()
ggsave(("mszp_vote_town_size.png"), width = 30, height = 18, units = c("cm"))
ggplot(egyeni_lista_by_telep_2018, aes(telep_tipus, orsz_jobbik_pc)) +
geom_smooth(method = "loess") +  geom_point(color ="red") + ggtitle("Jobbik vote share % by town size") + xlab("Town size category") + ylab("Jobbik vote share") +
theme_minimal()
ggsave(("jobbik_vote_town_size.png"), width = 30, height = 18, units = c("cm"))
ggplot(egyeni_lista_by_telep_2018, aes(telep_tipus, orsz_lmp_pc)) + geom_point(color ="red") +
geom_smooth(method = "loess") + ggtitle("LMP vote share % by town size") + xlab("Town size category") + ylab("LMP vote share") +
theme_minimal()
ggsave(("lmp_vote_town_size.png"), width = 30, height = 18, units = c("cm"))
### OEVK predictions
data_pred_egyeni <- read.csv("2018_egyeni_becsles_elteres.csv", fileEncoding = "UTF-8")
OEVK_pred_elemzes <- merge(egyeni_lista_by_oevk_2018, data_pred_egyeni, by ="oevk_id")
ggplot(OEVK_pred_elemzes, aes(Fidesz_egyeni_becsles, egyeni_fidesz_pc)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_line(aes(x=Fidesz_egyeni_becsles, y=Fidesz_egyeni_becsles), color="green", size = 1) +
ggtitle("Fidesz predicted and actual vote share % by OEVK") +
xlab("2018 Fidesz vote share") + ylab("Predicted vote share") +
xlim(0.25, 0.65) +
ylim(0.25, 0.65) +
theme_minimal()
ggsave(("fidesz_pred_actual.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(egyeni_fidesz_pc, Fidesz_pred_elteres)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_hline (yintercept=0, linetype="dashed", color = "red") +
ggtitle("Fidesz actual vote share and prediction error by OEVK") +
xlab("Fidesz vote share") + ylab("Prediction error") +
xlim(0.25, 0.65) +
theme_minimal()
ggsave(("fidesz_deviation.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(Jobbik_egyeni_becsles, egyeni_jobbik_pc)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_line(aes(x=Jobbik_egyeni_becsles, y=Jobbik_egyeni_becsles), color="green", size = 1) +
ggtitle("Jobbik predicted and actual vote share % by OEVK") +
xlab("2018 Jobbik vote share") + ylab("Predicted vote share") +
xlim(0.00, 0.50) +
ylim(0.00, 0.50) +
theme_minimal()
ggsave(("jobbik_pred_actual.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(egyeni_jobbik_pc, Jobbik_pred_elteres)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_hline (yintercept=0, linetype="dashed", color = "red") + ggtitle("Jobbik actual vote share and prediction error by OEVK") +
xlab("Jobbik vote share") + ylab("Prediction error") +
xlim(0.05, 0.45) +
theme_minimal()
ggsave(("jobbik_deviation.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(Baloldal_egyeni_becsles, egyeni_dk_pc)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_line(aes(x=Baloldal_egyeni_becsles, y=Baloldal_egyeni_becsles), color="green", size = 1) +
ggtitle("DK predicted and actual vote share % by OEVK") +
xlab("2018 DK vote share") + ylab("Predicted vote share") +
xlim(0.001, 0.55) +
ylim(0.001, 0.55) +
theme_minimal()
ggsave(("dk_pred_actual.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(egyeni_dk_pc, Baloldal_pred_elteres)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_hline (yintercept=0, linetype="dashed", color = "red") + ggtitle("DK actual vote share and prediction error by OEVK") +
xlab("DK vote share") + ylab("Prediction error") +
xlim(0.001, 0.55) +
theme_minimal()
ggsave(("dk_deviation.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(Baloldal_egyeni_becsles, egyeni_mszp_pc)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_line(aes(x=Baloldal_egyeni_becsles, y=Baloldal_egyeni_becsles), color="green", size = 1) +
ggtitle("MSZP predicted and actual vote share % by OEVK") +
xlab("2018 MSZP vote share") + ylab("Predicted vote share") +
xlim(0.001, 0.60) +
ylim(0.001, 0.60) +
theme_minimal()
ggsave(("mszp_pred_actual.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(egyeni_mszp_pc, Baloldal_pred_elteres)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "loess") +
geom_hline (yintercept=0, linetype="dashed", color = "red") +
ggtitle("MSZP actual vote share and prediction error by OEVK") +
xlab("MSZP vote share") + ylab("Prediction error") +
xlim(0.001, 0.60) +
theme_minimal()
ggsave(("mszp_deviation.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(LMP_egyeni_becsles, egyeni_lmp_pc)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "lm") +
geom_line(aes(x=Baloldal_egyeni_becsles, y=Baloldal_egyeni_becsles), color="green", size = 1) +
ggtitle("LMP predicted and actual vote share % by OEVK") +
xlab("2018 LMP vote share") + ylab("Predicted vote share") +
xlim(0.08, 0.55) +
ylim(0.08, 0.55) +
theme_minimal()
ggsave(("lmp_pred_actual.png"), width = 25, height = 25, units = c("cm"))
ggplot(OEVK_pred_elemzes, aes(egyeni_lmp_pc, LMP_pred_elteres)) + geom_point(color ="red") +
geom_text(aes(label=oevk_id),
size = 2) + geom_smooth(method = "lm") +
geom_hline (yintercept=0, linetype="dashed", color = "red") +
ggtitle("LMP actual vote share and prediction error by OEVK") +
xlab("LMP vote share") + ylab("Prediction error") +
xlim(0.08, 0.55) +
theme_minimal()
ggsave(("lmp_deviation.png"), width = 25, height = 25, units = c("cm"))
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
t_star_telepules_2014_2018$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
t_star_telepules_2014_2018$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
t_star_telepules_2014_2018$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
t_star_telepules_2014_2018$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
t_star_telepules_2014_2018 <- as.data.table(t_star_telepules_2014_2018)
write.csv(t_star_telepules_2014_2018, '2014_2018_tstar_by_telep.csv')
###t_star_telepules_2018 is all basic t_star data with all towns (Budapest merged)
#### regression example - GLM
###applying quintiles to continuous variables to create categories for easier analysis
t_star_telepules_2014_2018[is.na(t_star_telepules_2014_2018)] <- 0
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
regression_test_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q, data=t_star_telepules_2014_2018, na.action = na.pass)
summary(regression_test_2014_2018_tstar_mini)
coeftest(regression_test_2014_2018_tstar_mini)
###Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
### Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_mini <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
###additional data tables t-star (unemployment rate, pensioners, people on benefits, etc)
rm(list=ls())
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
data_allaskeresok <- read.csv("tstar/allaskeresok.csv", fileEncoding = "UTF-8")
data_allaskeresok <- as.data.table(data_allaskeresok)
data_allaskeresok <- data_allaskeresok[ev.3 == 2018]
data_koraranyok <- read.csv("tstar/koraranyok.csv", fileEncoding = "UTF-8")
data_koraranyok <- as.data.table(data_koraranyok)
data_koraranyok <- data_koraranyok[ev.3 == 2018]
data_munkaadok <- read.csv("tstar/munkaadok.csv", fileEncoding = "UTF-8")
data_munkaadok <- as.data.table(data_munkaadok)
data_munkaadok <- data_munkaadok[ev.3 == 2018]
data_nyugdijasok <- read.csv("tstar/nyugdijasok.csv", fileEncoding = "UTF-8")
data_nyugdijasok <- as.data.table(data_nyugdijasok)
data_nyugdijasok <- data_nyugdijasok[ev.3 == 2018]
data_tamogatottak <- read.csv("tstar/tamogatottak.csv", fileEncoding = "UTF-8")
data_tamogatottak <- as.data.table(data_tamogatottak)
data_tamogatottak <- data_tamogatottak[ev.3 == 2018]
colnames(t_star_telepules_2014_2018)[1] <- "telnev"
merge_all_t_star1 <- merge(data_allaskeresok, t_star_telepules_2014_2018, by = "telnev")
merge_all_t_star2 <- merge(data_koraranyok, merge_all_t_star1, by = c("telnev", "ev.3"))
merge_all_t_star3 <- merge(data_munkaadok, merge_all_t_star2, by = c("telnev", "ev.3"))
merge_all_t_star4 <- merge(data_nyugdijasok, merge_all_t_star3, by = c("telnev", "ev.3"))
merge_all_t_star4 <- subset(merge_all_t_star4, select = c(1:2, 4:5, 7:145))
merge_all_t_star_all <-  merge(data_tamogatottak, merge_all_t_star4, by = c("telnev", "ev.3"))
merge_all_t_star_all$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
merge_all_t_star_all$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
merge_all_t_star_all$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
merge_all_t_star_all$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
write.csv(merge_all_t_star_all, '2014_2018_tstar_all_by_telep.csv')
merge_all_t_star_all[is.na(merge_all_t_star_all)] <- 0
merge_all_t_star_all <- within(merge_all_t_star_all, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
###GLM with all T-star data
## Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_all <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
## Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_all <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
new_by_oevk_2014 <- read.csv("oevk2014_clean_new.csv")
egyeni_lista_by_oevk_2018 <- read.csv("2018_by_oevk_clean.csv")
new_by_oevk_2014 <- as.data.table(new_by_oevk_2014)
egyeni_lista_by_oevk_2018 <- as.data.table(egyeni_lista_by_oevk_2018)
oevk_2014_vs_2018 <- merge(new_by_oevk_2014, egyeni_lista_by_oevk_2018, by = "oevk_id")
write.csv(oevk_2014_vs_2018, "egyeni_oevk_2014_vs_2018.csv")
#FIDESZ
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_fidesz)
coeftest(oevk_2014_vs_2018_glm_fidesz)
logitcoeffs_oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_fidesz)
oevk_2014_vs_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_fidesz, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=profil), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
#JOBBIK
oevk_2014_vs_2018_glm_jobbik <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_jobbik)
coeftest(oevk_2014_vs_2018_glm_jobbik)
logitcoeffs_oevk_2014_vs_2018_glm_jobbik <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_jobbik)
oevk_2014_vs_2018$pred_logit_jobbik <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_jobbik, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.5) + ylim(0.00, 0.5) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each OEVK") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("jobbik_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
#MSZP
oevk_2014_vs_2018_glm_mszp <- glm(egyeni_mszp_pc ~ egyeni_kormanyvaltok_pc + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_mszp)
coeftest(oevk_2014_vs_2018_glm_mszp)
logitcoeffs_oevk_2014_vs_2018_glm_mszp <- glm(egyeni_mszp_pc ~ egyeni_kormanyvaltok_pc + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_mszp)
oevk_2014_vs_2018$pred_logit_mszp <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_mszp, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_mszp_pc, y= pred_logit_mszp)) + xlim(0.001, 0.65) + ylim(0.001, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("MSZP - Actual and predicted vote share in each OEVK") + xlab("2018 MSZP vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_mszp, y=pred_logit_mszp), color="green", size = 1) +
theme_minimal()
ggsave(("mszp_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
#LMP
oevk_2014_vs_2018_glm_lmp <- glm(egyeni_lmp_pc.y ~ egyeni_lmp_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_lmp)
coeftest(oevk_2014_vs_2018_glm_lmp)
logitcoeffs_oevk_2014_vs_2018_glm_lmp <- glm(egyeni_lmp_pc.y ~ egyeni_lmp_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_lmp)
oevk_2014_vs_2018$pred_logit_lmp <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_lmp, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_lmp_pc.y, y= pred_logit_lmp)) + xlim(0.001, 0.2) + ylim(0.001, 0.2) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("LMP - Actual and predicted vote share in each OEVK") + xlab("2018 LMP vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_lmp, y=pred_logit_lmp), color="green", size = 1) +
theme_minimal()
ggsave(("lmp_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 3, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=profil), size = 3, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=profil), size = 3, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.5) + ylim(0.00, 0.5) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each OEVK") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("jobbik_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.5) + ylim(0.00, 0.5) +
geom_text(aes(label=profil), size = 3, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each OEVK") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("jobbik_GLM_by_OEVK_2.png"), width = 25, height = 25, units = c("cm"))
