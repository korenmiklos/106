t_star_telepules_2014_2018$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
t_star_telepules_2014_2018$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
t_star_telepules_2014_2018 <- as.data.table(t_star_telepules_2014_2018)
write.csv(t_star_telepules_2014_2018, '2014_2018_tstar_by_telep.csv')
###t_star_telepules_2018 is all basic t_star data with all towns (Budapest merged)
#### regression example - GLM
###applying quintiles to continuous variables to create categories for easier analysis
t_star_telepules_2014_2018[is.na(t_star_telepules_2014_2018)] <- 0
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
regression_test_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q, data=t_star_telepules_2014_2018, na.action = na.pass)
summary(regression_test_2014_2018_tstar_mini)
coeftest(regression_test_2014_2018_tstar_mini)
###Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
### Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_mini <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + reszvetel_q +
kabeltv_arany_q + budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
logitcoeffs_regression_jobbik_2014_2018_tstar_mini <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
t_star_telepules_2014_2018$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
t_star_telepules_2014_2018$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
t_star_telepules_2014_2018$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
t_star_telepules_2014_2018$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
t_star_telepules_2014_2018 <- as.data.table(t_star_telepules_2014_2018)
write.csv(t_star_telepules_2014_2018, '2014_2018_tstar_by_telep.csv')
###t_star_telepules_2018 is all basic t_star data with all towns (Budapest merged)
#### regression example - GLM
###applying quintiles to continuous variables to create categories for easier analysis
t_star_telepules_2014_2018[is.na(t_star_telepules_2014_2018)] <- 0
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
regression_test_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q, data=t_star_telepules_2014_2018, na.action = na.pass)
summary(regression_test_2014_2018_tstar_mini)
coeftest(regression_test_2014_2018_tstar_mini)
###Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
### Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_mini <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
###additional data tables t-star (unemployment rate, pensioners, people on benefits, etc)
rm(list=ls())
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
data_allaskeresok <- read.csv("tstar/allaskeresok.csv", fileEncoding = "UTF-8")
data_allaskeresok <- as.data.table(data_allaskeresok)
data_allaskeresok <- data_allaskeresok[ev.3 == 2018]
data_koraranyok <- read.csv("tstar/koraranyok.csv", fileEncoding = "UTF-8")
data_koraranyok <- as.data.table(data_koraranyok)
data_koraranyok <- data_koraranyok[ev.3 == 2018]
data_munkaadok <- read.csv("tstar/munkaadok.csv", fileEncoding = "UTF-8")
data_munkaadok <- as.data.table(data_munkaadok)
data_munkaadok <- data_munkaadok[ev.3 == 2018]
data_nyugdijasok <- read.csv("tstar/nyugdijasok.csv", fileEncoding = "UTF-8")
data_nyugdijasok <- as.data.table(data_nyugdijasok)
data_nyugdijasok <- data_nyugdijasok[ev.3 == 2018]
data_tamogatottak <- read.csv("tstar/tamogatottak.csv", fileEncoding = "UTF-8")
data_tamogatottak <- as.data.table(data_tamogatottak)
data_tamogatottak <- data_tamogatottak[ev.3 == 2018]
colnames(t_star_telepules_2014_2018)[1] <- "telnev"
merge_all_t_star1 <- merge(data_allaskeresok, t_star_telepules_2014_2018, by = "telnev")
merge_all_t_star2 <- merge(data_koraranyok, merge_all_t_star1, by = c("telnev", "ev.3"))
merge_all_t_star3 <- merge(data_munkaadok, merge_all_t_star2, by = c("telnev", "ev.3"))
merge_all_t_star4 <- merge(data_nyugdijasok, merge_all_t_star3, by = c("telnev", "ev.3"))
merge_all_t_star4 <- subset(merge_all_t_star4, select = c(1:2, 4:5, 7:145))
merge_all_t_star_all <-  merge(data_tamogatottak, merge_all_t_star4, by = c("telnev", "ev.3"))
merge_all_t_star_all$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
merge_all_t_star_all$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
merge_all_t_star_all$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
merge_all_t_star_all$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
write.csv(merge_all_t_star_all, '2014_2018_tstar_all_by_telep.csv')
merge_all_t_star_all[is.na(merge_all_t_star_all)] <- 0
merge_all_t_star_all <- within(merge_all_t_star_all, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
###GLM with all T-star data
## Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_all <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
## Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_all <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
###additional data tables t-star (unemployment rate, pensioners, people on benefits, etc)
rm(list=ls())
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
data_allaskeresok <- read.csv("tstar/allaskeresok.csv", fileEncoding = "UTF-8")
data_allaskeresok <- as.data.table(data_allaskeresok)
data_allaskeresok <- data_allaskeresok[ev.3 == 2018]
data_koraranyok <- read.csv("tstar/koraranyok.csv", fileEncoding = "UTF-8")
data_koraranyok <- as.data.table(data_koraranyok)
data_koraranyok <- data_koraranyok[ev.3 == 2018]
data_munkaadok <- read.csv("tstar/munkaadok.csv", fileEncoding = "UTF-8")
data_munkaadok <- as.data.table(data_munkaadok)
data_munkaadok <- data_munkaadok[ev.3 == 2018]
data_nyugdijasok <- read.csv("tstar/nyugdijasok.csv", fileEncoding = "UTF-8")
data_nyugdijasok <- as.data.table(data_nyugdijasok)
data_nyugdijasok <- data_nyugdijasok[ev.3 == 2018]
data_tamogatottak <- read.csv("tstar/tamogatottak.csv", fileEncoding = "UTF-8")
data_tamogatottak <- as.data.table(data_tamogatottak)
data_tamogatottak <- data_tamogatottak[ev.3 == 2018]
colnames(t_star_telepules_2014_2018)[1] <- "telnev"
merge_all_t_star1 <- merge(data_allaskeresok, t_star_telepules_2014_2018, by = "telnev")
merge_all_t_star2 <- merge(data_koraranyok, merge_all_t_star1, by = c("telnev", "ev.3"))
merge_all_t_star3 <- merge(data_munkaadok, merge_all_t_star2, by = c("telnev", "ev.3"))
merge_all_t_star4 <- merge(data_nyugdijasok, merge_all_t_star3, by = c("telnev", "ev.3"))
merge_all_t_star4 <- subset(merge_all_t_star4, select = c(1:2, 4:5, 7:145))
merge_all_t_star_all <-  merge(data_tamogatottak, merge_all_t_star4, by = c("telnev", "ev.3"))
merge_all_t_star_all$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
merge_all_t_star_all$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
merge_all_t_star_all$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
merge_all_t_star_all$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
write.csv(merge_all_t_star_all, '2014_2018_tstar_all_by_telep.csv')
merge_all_t_star_all[is.na(merge_all_t_star_all)] <- 0
merge_all_t_star_all <- within(merge_all_t_star_all, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
merge_all_t_star_all <- within(merge_all_t_star_all, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
###GLM with all T-star data
## Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_all <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
## Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_all <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + kozmunka_aranya + nyudijas_ffi_arany +
nyudijas_noi_arany + nok_30_39_aranya + nok_40_49_aranya + nok_65._aranya +
ffi_30_39_aranya + ffi_40_49_aranya + ffi_65._aranya + allaskeresok_aranya_8osztaly +
ervenytelen_szazalek + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q
,  data=merge_all_t_star_all, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_all)
merge_all_t_star_all$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_all, type="response")
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id_2.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = merge_all_t_star_all, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telnev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1) +
theme_minimal()
ggsave(("Jobbik_GLM_by_town_2.png"), width = 25, height = 25, units = c("cm"))
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
new_by_oevk_2014 <- read.csv("oevk2014_clean_new.csv")
egyeni_lista_by_oevk_2018 <- read.csv("2018_by_oevk_clean.csv")
new_by_oevk_2014 <- as.data.table(new_by_oevk_2014)
egyeni_lista_by_oevk_2018 <- as.data.table(egyeni_lista_by_oevk_2018)
oevk_2014_vs_2018 <- merge(new_by_oevk_2014, egyeni_lista_by_oevk_2018, by = "oevk_id")
write.csv(oevk_2014_vs_2018, "egyeni_oevk_2014_vs_2018.csv")
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_fidesz)
coeftest(oevk_2014_vs_2018_glm_fidesz)
logitcoeffs_oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_fidesz)
oevk_2014_vs_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_fidesz, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_line(aes(x=pred_logit, y=pred_logit), colour="orange") +
geom_point()
new_by_oevk_2014 <- read.csv("oevk2014_clean_new.csv")
egyeni_lista_by_oevk_2018 <- read.csv("2018_by_oevk_clean.csv")
new_by_oevk_2014 <- as.data.table(new_by_oevk_2014)
egyeni_lista_by_oevk_2018 <- as.data.table(egyeni_lista_by_oevk_2018)
oevk_2014_vs_2018 <- merge(new_by_oevk_2014, egyeni_lista_by_oevk_2018, by = "oevk_id")
write.csv(oevk_2014_vs_2018, "egyeni_oevk_2014_vs_2018.csv")
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_fidesz)
coeftest(oevk_2014_vs_2018_glm_fidesz)
logitcoeffs_oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_fidesz)
oevk_2014_vs_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_fidesz, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), colour="orange") +
geom_point()
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
new_by_oevk_2014 <- read.csv("oevk2014_clean_new.csv")
egyeni_lista_by_oevk_2018 <- read.csv("2018_by_oevk_clean.csv")
new_by_oevk_2014 <- as.data.table(new_by_oevk_2014)
egyeni_lista_by_oevk_2018 <- as.data.table(egyeni_lista_by_oevk_2018)
oevk_2014_vs_2018 <- merge(new_by_oevk_2014, egyeni_lista_by_oevk_2018, by = "oevk_id")
write.csv(oevk_2014_vs_2018, "egyeni_oevk_2014_vs_2018.csv")
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_fidesz)
coeftest(oevk_2014_vs_2018_glm_fidesz)
logitcoeffs_oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_fidesz)
oevk_2014_vs_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_fidesz, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
new_by_oevk_2014 <- read.csv("oevk2014_clean_new.csv")
egyeni_lista_by_oevk_2018 <- read.csv("2018_by_oevk_clean.csv")
new_by_oevk_2014 <- as.data.table(new_by_oevk_2014)
egyeni_lista_by_oevk_2018 <- as.data.table(egyeni_lista_by_oevk_2018)
oevk_2014_vs_2018 <- merge(new_by_oevk_2014, egyeni_lista_by_oevk_2018, by = "oevk_id")
write.csv(oevk_2014_vs_2018, "egyeni_oevk_2014_vs_2018.csv")
oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018)
summary(oevk_2014_vs_2018_glm_fidesz)
coeftest(oevk_2014_vs_2018_glm_fidesz)
logitcoeffs_oevk_2014_vs_2018_glm_fidesz <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + szavazokorok_szama + telepulesek_szama + profil + varos_aranya, data=oevk_2014_vs_2018, family='binomial')
summary(logitcoeffs_oevk_2014_vs_2018_glm_fidesz)
oevk_2014_vs_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_oevk_2014_vs_2018_glm_fidesz, type="response")
ggplot(data = oevk_2014_vs_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.25, 0.65) + ylim(0.25, 0.65) +
geom_text(aes(label=oevk_id), size = 1.5, check_overlap = FALSE) +
geom_point(color ="red") +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each OEVK") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_OEVK.png"), width = 25, height = 25, units = c("cm"))
data_telepulesadatok_t_star <-read.csv("Telepulesadatok_t_star.csv")
colnames(data_telepulesadatok_t_star)[1] <- "telep_nev"
egyeni_lista_2018_telep_clean <- read.csv("2018_by_telep_clean.csv", fileEncoding = "UTF-8")
oevk_2014_telep_clean <- read.csv("oevk2014_telepules_clean.csv", fileEncoding = "UTF-8")
t_star_telepules_2018 <- merge(data_telepulesadatok_t_star, egyeni_lista_2018_telep_clean, by.x = "telep_nev")
t_star_telepules_2014_2018 <- merge(oevk_2014_telep_clean, t_star_telepules_2018, by = "telep_nev")
t_star_telepules_2014_2018$megye_ido_km <- as.numeric(t_star_telepules_2014_2018$megye_ido_km)
t_star_telepules_2014_2018$megyeszekhely_km <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_km)
t_star_telepules_2014_2018$megyeszekhely_min <- as.numeric(t_star_telepules_2014_2018$megyeszekhely_min)
t_star_telepules_2014_2018$altisk <- as.numeric(t_star_telepules_2014_2018$altisk)
t_star_telepules_2014_2018 <- as.data.table(t_star_telepules_2014_2018)
write.csv(t_star_telepules_2014_2018, '2014_2018_tstar_by_telep.csv')
###t_star_telepules_2018 is all basic t_star data with all towns (Budapest merged)
#### regression example - GLM
###applying quintiles to continuous variables to create categories for easier analysis
t_star_telepules_2014_2018[is.na(t_star_telepules_2014_2018)] <- 5
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, reszvetel_q <- as.integer(cut(reszvetel, quantile(reszvetel, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_ido_km_q <- as.integer(cut(budapest_ido_km, quantile(budapest_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megye_ido_km_q <- as.integer(cut(megye_ido_km, quantile(megye_ido_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_km_q <- as.integer(cut(megyeszekhely_km, quantile(megyeszekhely_km, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, megyeszekhely_min_q <- as.integer(cut(megyeszekhely_min, quantile(megyeszekhely_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, budapest_min_q <- as.integer(cut(budapest_min, quantile(budapest_min, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, altisk_q <- as.integer(cut(altisk, quantile(altisk, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, jovedelem_fo_q <- as.integer(cut(jovedelem_fo, quantile(jovedelem_fo, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, ujszulott_rate_q <- as.integer(cut(ujszulott_rate, quantile(ujszulott_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, idosek_rate_q <- as.integer(cut(idosek_rate, quantile(idosek_rate, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, nepesseg_q <- as.integer(cut(nepesseg, quantile(nepesseg, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, elvandorlas_q <- as.integer(cut(elvandorlas, quantile(elvandorlas, probs=0:10/10), include.lowest=TRUE)))
t_star_telepules_2014_2018 <- within(t_star_telepules_2014_2018, odavanadorlas_q <- as.integer(cut(odavanadorlas, quantile(odavanadorlas, probs=0:10/10), include.lowest=TRUE)))
regression_test_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q, data=t_star_telepules_2014_2018, na.action = na.pass)
summary(regression_test_2014_2018_tstar_mini)
coeftest(regression_test_2014_2018_tstar_mini)
###Fidesz
logitcoeffs_regression_fidesz_2014_2018_tstar_mini <- glm(egyeni_fidesz_pc.y ~ egyeni_fidesz_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_fidesz_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_fidesz <- predict.glm(logitcoeffs_regression_fidesz_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_fidesz_pc.y, y= pred_logit_fidesz)) + xlim(0.15, 1.00) + ylim(0.15, 1.00) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Fidesz - Actual and predicted vote share in each town") + xlab("2018 Fidesz vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_fidesz, y=pred_logit_fidesz), color="green", size = 1) +
theme_minimal()
ggsave(("fidesz_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
### Jobbik
logitcoeffs_regression_jobbik_2014_2018_tstar_mini <- glm(egyeni_jobbik_pc.y ~ egyeni_jobbik_pc.x + reszvetel_q +
budapest_ido_km_q + megye_ido_km_q + megyeszekhely_km_q + megyeszekhely_min_q +
budapest_min_q + altisk_q + jovedelem_fo_q + ujszulott_rate_q +
idosek_rate_q + nepesseg_q + elvandorlas_q + odavanadorlas_q,  data=t_star_telepules_2014_2018, family='binomial'(link="logit"))
summary(logitcoeffs_regression_jobbik_2014_2018_tstar_mini)
t_star_telepules_2014_2018$pred_logit_jobbik <- predict.glm(logitcoeffs_regression_jobbik_2014_2018_tstar_mini, type="response")
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=megyeid), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_megye_id.png"), width = 25, height = 25, units = c("cm"))
ggplot(data = t_star_telepules_2014_2018, aes(x=egyeni_jobbik_pc.y, y= pred_logit_jobbik)) + xlim(0.00, 0.65) + ylim(0.00, 0.65) +
geom_text(aes(label=telep_nev), size = 1, check_overlap = FALSE) +
geom_smooth(method = "loess") +  ggtitle("Jobbik - Actual and predicted vote share in each town") + xlab("2018 Jobbik vote %") + ylab("GLM prediction") +
geom_line(aes(x=pred_logit_jobbik, y=pred_logit_jobbik), color="green", size = 1)
theme_minimal()
ggsave(("Jobbik_GLM_by_town.png"), width = 25, height = 25, units = c("cm"))
### UNIFORM SWING vote share
rm(list=ls())
data <- read.csv("vote_counts_precincts_2b.csv")
data <- as.data.table(data)
#kamupartok egyesitese es szurese
kamu <- subset(data, select = c(id, mcp, haza_nem_elado, sms, fkgp, udp, sem, jesz, ump, munkaspart, szocdemek, kti, egyutt2014, zoldek, osszefogas))
kamu$egyeb <- rowSums( kamu[,2:15] )
kamu2 <- subset(kamu, select = c(id, egyeb))
data2 <- merge(data, kamu2, by="id")
#reszveteli adatok, 4 part listaja, egyeni, egyeb partok lista + megye, telepules, szavazokor kulon
data_clean <- subset(data2, select = c(id, atjelentkezettek, szavazokor, oevk_id, szavazok, reszvetel, fidesz, lmp, kormanyvaltok, jobbik, egyeni_fidesz, egyeni_lmp, egyeni_kormanyvaltok, egyeni_jobbik, egyeb))
#szavazasra jogosultak szama / szavazokor
data_clean <- data_clean[, ossz_szavazo := round(szavazok / (reszvetel /100), digits = 0)]
#szavazokorok szama
data_szavazokorok_szama <- data_clean[, list(szavazokorok_szama = .N), by = oevk_id]
data_clean <- merge(data_clean, data_szavazokorok_szama, by = "oevk_id")
#UJ VALTOZOK - partok szazalekos egyeni eredmenye egymashoz viszonyitva (kamupartok nelkul)
data_clean <- data_clean[, egyeni_fidesz_pc := egyeni_fidesz / (egyeni_fidesz + egyeni_jobbik + egyeni_kormanyvaltok + egyeni_lmp + egyeb)]
data_clean <- data_clean[, egyeni_kormanyvaltok_pc := egyeni_kormanyvaltok / (egyeni_fidesz + egyeni_jobbik + egyeni_kormanyvaltok + egyeni_lmp + egyeb)]
data_clean <- data_clean[, egyeni_jobbik_pc := egyeni_jobbik / (egyeni_fidesz + egyeni_jobbik + egyeni_kormanyvaltok + egyeni_lmp + egyeb)]
data_clean <- data_clean[, egyeni_lmp_pc := egyeni_lmp / (egyeni_fidesz + egyeni_jobbik + egyeni_kormanyvaltok + egyeni_lmp + egyeb)]
#2014 results - single-seats
oevk_2014_vs_2018 <- oevk_2014_vs_2018[, Fidesz_2014_orszagos_UNS := 44.13]
